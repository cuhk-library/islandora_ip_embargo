<?php
/**
 * @file
 * Handles the install and uninstall of islandora_ip_embargo.
 */

/**
 * Implements hook_schema().
 */
function islandora_ip_embargo_schema() {
  $schema['islandora_ip_embargo_lists'] = array(
    'description' => 'Table that stores lists of IP ranges.',
    'fields' => array(
      'lid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The UID for embargo lists.',
      ),
      'name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The human readable name of the list.',
      ),
    ),
    'primary key' => array('lid'),
  );
  
  $schema['islandora_ip_embargo_ip_ranges'] = array(
    'description' => 'Table that stores lists of IP ranges.',
    'fields' => array(
      'rid' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The UID for IP address ranges.',
      ),
      'low_end' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The low end of the IP address range.',
      ),
      'high_end' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The high end of the IP address range.',
      ),
      'lid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The LID that the range belongs to.',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'islandora_ip_embargo_lists',
        'columns' => array('lid' => 'lid'),
      ),
    ),
    'primary key' => array('rid'),
  );

  $schema['islandora_ip_embargo_embargoes'] = array(
    'description' => 'Table that stores information on embargoed objects.',
    'fields' => array(
      'pid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The PID of the object being embargoed.',
      ),
      'expiry' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => "The timestamp of when the embargo should be lifted or 'never'.",
      ),
      'lid' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The LID the object is constrained to.',
      ),
      'expiry_event_triggered' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
        'description' => '0 if the event has not been triggered 1 if it has been.',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'islandora_ip_embargo_lists',
        'columns' => array('lid' => 'lid'),
      ),
    ),
    'primary key' => array('pid'),
  );
  
  $schema['islandora_ip_embargo_datastream'] = array(
    'description' => 'Unique datastream name and id.',
    'fields' => array(
      'did' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The id of each item.',
      ),
      'datastream_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Name of the datastream',
      ),
    ),
    'primary key' => array('did'),
  );
  
  $schema['islandora_ip_embargo_embargoes_datastream'] = array(
    'description' => 'Datastream embargo for particular pid.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The id of each item.',
      ),
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The datastream id',
      ),
      'pid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'PID of Object',
      ),
      'expiry_date' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Expiry date of that pid',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'islandora_ip_embargo_lists',
        'columns' => array('pid' => 'pid'),
      ),
      'datastream' => array(
        'table' => 'islandora_ip_embargo_datastream',
        'columns' => array('did' => 'did'),
      ),
    ),
    'primary key' => array('id'),
  );
  
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function islandora_ip_embargo_uninstall() {
  $drupal_variables = array(
    'islandora_ip_embargo_embargoed_redirect',
    'islandora_ip_embargo_days_before_embargo_trigger',
    'islandora_ip_embargo_overlay_text',
    'islandora_ip_embargo_overlay_text_color',
  );
  foreach ($drupal_variables as $drupal_variable) {
    variable_del($drupal_variable);
  }
}

/**
 * Implements hook_update_N().
 */
function islandora_ip_embargo_update_7100() {
  $new_field = array(
    'type' => 'int',
    'unsigned' => TRUE,
    'not null' => TRUE,
    'default' => 0,
    'description' => '0 if the event has not been triggered 1 if it has been.',
  );
  db_add_field('islandora_ip_embargo_embargoes', 'expiry_event_triggered', $new_field);
}

/**
 * Implements hook_update_N().
 */
function islandora_ip_embargo_update_7101() {
  $schema['islandora_ip_embargo_datastream'] = array(
    'description' => 'Unique datastream name and id.',
    'fields' => array(
      'did' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The id of each item.',
      ),
      'datastream_name' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'Name of the datastream',
      ),
    ),
    'primary key' => array('did'),
  );
  
  $schema['islandora_ip_embargo_embargoes_datastream'] = array(
    'description' => 'Datastream embargo for particular pid.',
    'fields' => array(
      'id' => array(
        'type' => 'serial',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The id of each item.',
      ),
      'did' => array(
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'description' => 'The datastream id',
      ),
      'pid' => array(
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'PID of Object',
      ),
      'expiry_date' => array(
        'type' => 'varchar',
        'length' => 255,
        'description' => 'Expiry date of that pid',
      ),
    ),
    'foreign keys' => array(
      'list' => array(
        'table' => 'islandora_ip_embargo_lists',
        'columns' => array('pid' => 'pid'),
      ),
      'datastream' => array(
        'table' => 'islandora_ip_embargo_datastream',
        'columns' => array('did' => 'did'),
      ),
    ),
    'primary key' => array('id'),
  );
  db_create_table('islandora_ip_embargo_datastream', $schema['islandora_ip_embargo_datastream']);
  db_create_table('islandora_ip_embargo_embargoes_datastream', $schema['islandora_ip_embargo_embargoes_datastream']);
}